Тестовое задание на позицию Java backend разработчик

Описание задания
Реализовать ИС учета операций с вагонами на предприятии. В ИС должны быть реализованы следующие операции:
•	Операция приема вагонов на предприятие. На входе список вагонов с учетом на какой путь станции данные вагоны принимаются.
    Вагоны могут приниматься только в конец состава.

	/wagon/arrival
	{
		wagons: [{id : 1, number: 123124, type: "Грузовой", weightWagon: 10, loadCapacity: 100}, {id : 2, number: 1231243, type: "Грузовой", weightWagon: 10, loadCapacity: 100}],
		station: {name: "Гадюкино"}
		road: {number: 2}
	}
	// Требуется проверка является есть ли на этой станции этот путь?

•	Операция перестановки вагонов внутри станции. На входе список вагонов и путь на который они будут перемещены.
    Вагоны могут быть перемещены только в начало или конец состава.

	/wagon/change
	{
		wagons: [{number: 123124}, {number: 1231243}, {number: 1231246}]
		station: {name: "Гадюкино"}
		road: {number: 3}
	}
	// Требуется проверка является есть ли на этой станции этот путь? Находятся ли поезда на этой станции?

•	Операция убытия вагонов на сеть РЖД. Вагоны могут убывать только с начала состава.

	/wagon/departure

В системе должны быть реализованы следующие справочники:
•	Паспорт вагонов (Номер, Тип, Вес тары, Грузоподъемность)
•	Станционная модель (Станции, Пути станций)
•	Натурный лист для приема вагонов (Список вагонов с атрибутами: Порядковый номер, Номер вагона, Номенклатура груза, Вес груза в вагоне, Вес вагона)
•	Справочник номенклатур грузов (Код груза, Наименование груза)

Для каждой сущности должен быть реализован Rest Controller содержащий все CRUD операции.

Технические требования
•	Взаимодействие с БД с помощью Spring Data Jpa
•	БД Oracle/Postgress. Желательно реализовать оба подхода
•	Для контроллеров Spring Web. Реализовать аутентификацию/авторизацию (Basic будет достаточно). Подключить swagger
•	Логирование с помощью logback
•	Покрытие unit тестами не менее 50%




